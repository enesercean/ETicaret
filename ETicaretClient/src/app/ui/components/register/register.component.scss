// Main container with background gradient
.register-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 90vh;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding: 2rem;
}

// Card with glassmorphism effect
.register-card {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  border-radius: 16px;
  padding: 3rem;
  width: 100%;
  max-width: 550px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.18);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(var(--primary-color-rgb), 0.2), rgba(var(--primary-color-rgb), 0.05));
    z-index: -1;
  }

  &::after {
    content: '';
    position: absolute;
    bottom: -50%;
    right: -50%;
    width: 250px;
    height: 250px;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(var(--primary-color-rgb), 0.05), rgba(var(--primary-color-rgb), 0.2));
    z-index: -1;
  }
}

// Title with modern typography
.register-title {
  color: var(--primary-color);
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  text-align: center;
  letter-spacing: -0.5px;

  &::after {
    content: '';
    display: block;
    width: 70px;
    height: 4px;
    background-color: var(--primary-color);
    margin: 0.5rem auto 0;
    border-radius: 2px;
  }
}

// Subtle subtitle
.register-subtitle {
  color: var(--text-color-secondary);
  margin-bottom: 2.5rem;
  text-align: center;
  font-size: 1rem;
  font-weight: 400;
}

// Form fields styling
.p-fluid .field {
  margin-bottom: 1.8rem;
  position: relative;

  &:focus-within {
    label {
      color: var(--primary-color);
    }
  }
}

// Input styling
:host ::ng-deep {
  .p-inputtext {
    border-radius: 8px;
    padding: 1rem 1rem;
    border: 1px solid #ced4da;
    transition: all 0.3s;

    &:hover {
      border-color: var(--primary-300);
    }

    &:focus {
      box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
    }
  }

  // Fix for float labels
  .p-float-label {
    display: block;
    position: relative;
    
    label {
      position: absolute;
      pointer-events: none;
      top: 50%;
      left: 0.75rem; // Adjust for padding
      transform: translateY(-50%);
      transition: 0.3s ease all;
      color: #6c757d;
      font-weight: 500;
      background-color: transparent; // Ensure no overlap
      padding: 0 0.25rem;
    }
    
    input:focus ~ label,
    input.p-filled ~ label,
    textarea:focus ~ label,
    textarea.p-filled ~ label,
    .p-inputwrapper-focus ~ label,
    .p-inputwrapper-filled ~ label {
      top: -0.75rem;
      left: 0.5rem; // Align with input padding
      font-size: 0.85rem;
      background-color: #fff; // Match input background
      padding: 0 0.25rem;
      color: var(--primary-color);
      transform: translateY(0);
    }
  }

  .p-password input {
    width: 100%;
    border-radius: 8px;
  }
}

// Error message styling
small.p-error {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  margin-top: 0.5rem;
  font-size: 0.85rem;
  position: absolute;
  animation: fadeIn 0.3s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Checkbox field styling
.checkbox-field {
  margin: 2rem 0;

  ::ng-deep .p-checkbox {
    margin-right: 0.5rem;
  }

  label {
    color: var(--text-color);
    font-size: 0.95rem;
  }
}

// Button container
.button-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.2rem;
  margin-top: 1rem;
  // Button styling
  ::ng-deep .p-button {
    border-radius: 30px;
    padding: 0.75rem 2rem;
    font-weight: 600;
    transition: transform 0.3s, box-shadow 0.3s;
    width: 100%;

    &:enabled:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(var(--primary-color-rgb), 0.3);
    }

    &:enabled:active {
      transform: translateY(0);
    }

    .p-button-icon {
      font-size: 1.1rem;
    }
  }
}

// Login link styling
.login-link {
  color: var(--primary-color);
  text-decoration: none;
  font-size: 0.95rem;
  transition: all 0.2s;
  font-weight: 500;
  margin-top: 0.5rem;
  position: relative;

  &:after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: var(--primary-color);
    transition: width 0.3s ease;
  }

  &:hover {
    color: var(--primary-600);

    &:after {
      width: 100%;
    }
  }
}

// Add form section separators
.form-section {
  position: relative;
  padding-bottom: 1.5rem;
  margin-bottom: 1.5rem;

  &:not(:last-child):after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 25%;
    width: 50%;
    height: 1px;
    background: linear-gradient(to right, transparent, var(--surface-border), transparent);
  }
}

// Responsive adjustments
@media screen and (max-width: 768px) {
  .register-card {
    padding: 2rem;
  }

  .register-title {
    font-size: 2rem;
  }
}

@media screen and (max-width: 576px) {
  .register-container {
    padding: 1rem;
  }

  .register-card {
    padding: 1.5rem;
    border-radius: 12px;
  }

  .register-title {
    font-size: 1.8rem;
  }
}

// Animation for elements
.animate-in {
  animation: slideUp 0.5s forwards;
  opacity: 0;
}

@for $i from 1 through 8 {
  .field:nth-child(#{$i}), .register-title, .register-subtitle {
    animation-delay: $i * 0.1s;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
